---
- name: Play1 - Configure LAN Switches
  hosts: lan
  gather_facts: yes
  tags: lan
  tasks:
  - name: Configure Hostname and Domain Name
    cisco.ios.ios_system:
      hostname: "{{ inventory_hostname }}"
      domain_name: "{{ domain_name }}"
      lookup_enabled: no
      name_servers: "{{ dns_servers }}"
    tags: basic
    notify: "save ios"

  - name: Configure NTP
    cisco.ios.ios_ntp:
      server: "{{ ntp_server }}"
      logging: true
      state: present
      key_id: "10"
      auth_key: 15435A030726242723273C21181319000A
      auth: true
    tags: ntp
    notify: "save ios"

  - name: Get Running Config
    cisco.ios.ios_command:
      commands:
      - sh run
    register: running_config
  
  - name: Get Current List of NTP Servers
    set_fact: ntp_servers_in_cfg="{{ running_config.stdout[0] | regex_findall('^ntp server (\S+)', multiline=True) }}"

  - name: Remove Old NTP Servers
    cisco.ios.ios_config:
      lines:
      - "no ntp server {{ item }}"
    when: item != ntp_server
    loop: "{{ ntp_servers_in_cfg }}"
    tags: ntp
    notify: "save ios"

  - name: Configure Interfaces
    cisco.ios.ios_interfaces:
      config:
      - name: "{{ item.name }}"
        description: "{{ item.description }}"
        duplex: "{{ intf_duplex }}"
        mtu: "{{ intf_mtu }}"
      state: merged
    loop: "{{ l2_interfaces[inventory_hostname] }}"
    register: ios_intf
    tags: interface
    notify: "save ios"

  - name: Display Interfaces
    debug: 
      msg: "Device {{ inventory_hostname }} Port: {{ item.name }} with description: {{ item.description }}"
    when: item.description is defined and item.description == 'access1'
    loop: "{{ ios_intf.results[0].after }}"
    tags: interface

  - name: Configure L2 VLANs in DB
    cisco.ios.ios_vlans:
      config:
      - name: "{{ item.name }}"
        vlan_id: "{{ item.vlan_id }}"
        state: active
      state: merged
    loop: "{{ vlans }}"
    register: vlans
    tags: vlan
    notify: "save ios"
  
  - name: Display L2 VLANs
    debug: var=vlans

  - name: Configure L2 Trunks
    cisco.ios.ios_l2_interfaces:
      config:
      - name: "{{ item.name }}"
        mode: "{{ item.mode }}"
        trunk_allowed_vlans: "{{ vlans | map(attibute='vlan_id') | join(',') }}"
        state: present
    loop: "{{ l2_interfaces[inventory_hostname] | selectattr('mode', 'equalto', 'trunk') | list  }}"

  - name: Enable Dot1q on Trunks
    cisco.ios.ios_config:
      lines:
      - switchport trunk encapsulation dot1q
      parents: "{{ l2_interfaces[inventory_hostname] | selectattr('mode', 'equalto', 'trunk') }}"
      tags: trunk
      notify: "save ios"

  - name: Configure Access Ports
    cisco.ios.ios_interfaces:
      config:
      - name: "{{ item.name }}"
        mode: "{{ item.mode }}"
        access_vlan: "{{ item.vlan }}"
        state: present
    loop: "{{ l2_interfaces[inventory_hostname] | selectattr('mode', 'equalto', 'access') | list }}"
    tags: access
    notify: "save ios"
  
  handlers:
  - name: save ios
    ios_command:
      commands:
      - write mem
      timeout: 40
    when: not ansible_check_mode

- name: Configure Core Switches
  hosts: core
  gather_facts: no
  tags: core
  tasks:
  - name: Configure CS to CS VLAN
    cisco.ios.ios_vlans:
      config:
      - name: "{{ item.name }}"
        vlan_id: "{{ item.vlan_id }}"
        state: active
      state: merged
    loop: "{{ core_vlans }}"
    tags: vlan
    notify: "save ios"

  - name: Configure CS to CS Trunk
    cisco.ios.ios_l2_interfaces:
      config:
      - name: "{{ item.name }}"
        mode: "{{ item.mode }}"
        trunk_allowed_vlans: "{{ (core_vlans | map(attibute='vlan_id') | join(',') }}"
        state: present
    loop: "{{ l2_interfaces[inventory_hostname] | selectattr('mode', 'equalto', 'trunk') | list  }}"
    tags: trunk
    notify: "save ios"

  handlers:
  - name: save ios
    ios_command:
      commands:
      - write mem
      timeout: 40
    when: not ansible_check_mode
  


